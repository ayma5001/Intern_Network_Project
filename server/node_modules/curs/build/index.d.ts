import * as THREE from "three";
declare type config = {
    shadow?: boolean;
    camera?: {
        position?: THREE.Vector3;
        lookAt?: THREE.Vector3;
        shadow?: boolean;
    };
};
export declare class Scene {
    context: {
        [propName: string]: any;
    };
    ready: Function;
    scene: THREE.Scene;
    camera: THREE.PerspectiveCamera;
    renderer: THREE.WebGLRenderer;
    container: Element;
    audioListener: THREE.AudioListener;
    refs: {
        [propName: string]: any;
    };
    loadDom: HTMLDivElement;
    loading: {
        total: number;
        count: number;
        progress: string;
    };
    tasks: Array<{
        uuid: string;
        update: Function;
    }>;
    constructor(options: {
        context?: {
            [propName: string]: any;
        };
        ready?: Function;
        config?: config;
    });
    private _config;
    private _loading;
    private _windowResize;
    private _update;
    add(object3D: THREE.Object3D): void;
    update(task: {
        uuid: string;
        update: Function;
    }, add?: boolean): void;
}
export {};
