"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var index_1 = require("../compiler/index");
var index_2 = require("./jsBuilder/index");
var Loader = /** @class */ (function () {
    function Loader() {
        this._render = /<render>[\s\S]*<\/render>/;
        this._script = /<script>[\s\S]*<\/script>/;
        this._export = /export[\s]+default[\s]*{/;
        this._compiler = new index_1.Compiler();
        this._jsBuilder = new index_2.JSBuilder();
    }
    Loader.prototype.parse = function (source) {
        var code = "\n        import {Scene} from \"../build/index\";\n        import * as THREE from \"three\";\n        import {FBXLoader} from \"three/examples/jsm/loaders/FBXLoader\";\n        import {GLTFLoader} from \"three/examples/jsm/loaders/GLTFLoader\";\n        ";
        var script = source.match(this._script);
        if (script) {
            code += this._exports(script[0]);
        }
        else {
            code += "const scene = new Scene({});";
        }
        var render = source.match(this._render);
        if (render) {
            var tree = this._compiler.parse(render[0]);
            code += this._jsBuilder.build(tree);
        }
        return code;
    };
    Loader.prototype._exports = function (script) {
        var start = script.indexOf("<script>");
        var end = script.lastIndexOf("</script>");
        script = script.substr(start, end - start).substr(start + 8);
        script = script.replace(this._export, "const scene = new Scene({");
        script += ");";
        return script;
    };
    return Loader;
}());
var loader = new Loader();
module.exports = function (source) {
    return loader.parse(source);
};
